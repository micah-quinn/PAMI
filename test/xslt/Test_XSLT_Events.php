<?php
/**
 * This class will test some events.
 *
 * PHP Version 5
 *
 * @category   Pami
 * @package    Test
 * @subpackage Event
 * @author     Marcelo Gornstein <marcelog@gmail.com>
 * @author     Diederik de Groot <ddegroot@gmail.com>
 * @license    http://github.com/chan-sccp/PAMI/LICENSE
 * @version    SVN: $Id$
 * @link       http://marcelog.github.com/
 *
 * Copyright 2011 Marcelo Gornstein <marcelog@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
namespace PAMI\Client\Impl {
    use PHPUnit\Framework\TestCase as BaseTestCase;

    /**
     * This class will test  xslt generated actions.
     *
     * PHP Version 5
     *
     * @category   Pami
     * @package    Test
     * @subpackage Action
     * @author     Diederik de Groot <ddegroot@gmail.com>
     * @license    http://chan-sccp.github.com/PAMI/ Apache License 2.0
     * @link       http://github.com/chan-sccp/PAMI/
     */
    class Test_XSLT_Events extends BaseTestCase
    {
        private function _testEvent($eventName, array $getters, array $values, array $translatedValues)
        {
            global $mock_stream_socket_client;
            global $mock_stream_set_blocking;
            global $mockTime;
            global $standardAMIStart;
            $eventClass = "\\PAMI\\Message\\Event\\" . $eventName . 'Event';
            $mockTime = true;
            $mock_stream_socket_client = true;
            $mock_stream_set_blocking = true;
            $options = array(
            'host' => '2.3.4.5',
            'scheme' => 'tcp://',
            'port' => 9999,
            'username' => 'asd',
            'secret' => 'asd',
            'connect_timeout' => 10,
            'read_timeout' => 10
            );
            $write = array(
            "action: Login\r\nactionid: 1432.123\r\nusername: asd\r\nsecret: asd\r\n"
            );
            setFgetsMock($standardAMIStart, $write);
            $client = new \PAMI\Client\Impl\ClientImpl($options);
            $client->registerEventListener(new SomeListenerClass);
            $client->open();
            $message = array();
            $message[] = 'Event: ' . $eventName;
            foreach ($values as $key => $value) {
                $message[] = $key . ': ' . $value;
            }
            $message[] = '';
            setFgetsMock($message, $message);
            for ($i = 0; $i < count($message); $i++) {
                $client->process();
            }
            $event = SomeListenerClass::$event;
            $this->assertInstanceOf($eventClass, $event);
            foreach ($values as $key => $value) {
                if (isset($getters[$eventName][$key])) {
                    $methodName = 'get' . $getters[$eventName][$key];
                } else {
                    $methodName = 'get' . $key;
                }
                if (isset($translatedValues[$eventName][$key])) {
                    $value = $translatedValues[$eventName][$key];
                }
                $this->assertTrue(
                    method_exists($event, $methodName),
                    sprintf('Method %s doesn\'t exist in the event %s', $methodName, get_class($event))
                );

                $this->assertEquals($event->$methodName(), $value, $eventName);
            }
        }
        
        /**
         * @test
         */
        public function can_report_events()
        {
            $eventNames = array(
               'MCID',
               'AlarmClear',
               'SpanAlarmClear',
               'Alarm',
               'SpanAlarm',
               'SIPQualifyPeerDone',
               'SessionTimeout',
               'MiniVoiceMail',
               'ConfbridgeRecord',
               'ConfbridgeStopRecord',
               'MeetmeJoin',
               'MeetmeLeave',
               'MeetmeEnd',
               'MeetmeTalkRequest',
               'MeetmeTalking',
               'MeetmeMute',
               'QueueMemberPause',
               'QueueMemberPenalty',
               'QueueMemberRinginuse',
               'AgentCalled',
               'AgentRingNoAnswer',
               'AgentComplete',
               'AgentDump',
               'LocalBridge',
               'LocalOptimizationBegin',
               'LocalOptimizationEnd',
               'Load',
               'Unload',
               'BridgeVideoSourceUpdate',
               'Pickup',
               'Shutdown',
               'DeviceStateChange',
               'HangupRequest',
               'SoftHangupRequest',
               'NewConnectedLine',
               'DialState',
               'Unhold',
               'ChanSpyStart',
               'ChanSpyStop',
               'HangupHandlerRun',
               'HangupHandlerPop',
               'HangupHandlerPush',
               'FAXStatus',
               'ReceiveFAX',
               'SendFAX',
               'MonitorStart',
               'MonitorStop',
               'ExtensionStateListComplete',
               'PresenceStateChange',
               'FailedACL',
               'InvalidAccountID',
               'SessionLimit',
               'MemoryLimit',
               'LoadAverageLimit',
               'RequestNotSupported',
               'RequestNotAllowed',
               'AuthMethodNotAllowed',
               'UnexpectedAddress',
               'ChallengeResponseFailed',
               'InvalidPassword',
               'ChallengeSent',
               'InvalidTransport',
               'ChannelTalkingStart',
               'ChannelTalkingStop',
               'ContactStatus',
               'PresenceStatus',
               'ParkedCallSwap',
               'DeviceStateChange',
               'DeviceStateListComplete',
               'PresenceStateChange',
               'PresenceStateListComplete',
               'MWIGet',
               'MWIGetComplete',
               'FAXSessionsEntry',
               'FAXSessionsComplete',
               'FAXSession',
               'FAXStats',
               'IdentifyDetail',
               'AorList',
               'AuthList',
               'ContactList',
               'IdentifyDetail',
               'EndpointDetailComplete',
               'AorList',
               'AorListComplete',
               'AuthList',
               'AuthListComplete',
               'ContactList',
               'ContactListComplete',

            );
            $eventTranslatedValues = array(

            );
            $eventValues = array(

               'MCID' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'mcalleridnumvalid' => 'MCallerIDNumValid',
                   'mcalleridnum' => 'MCallerIDNum',
                   'mcalleridton' => 'MCallerIDton',
                   'mcalleridnumplan' => 'MCallerIDNumPlan',
                   'mcalleridnumpres' => 'MCallerIDNumPres',
                   'mcalleridnamevalid' => 'MCallerIDNameValid',
                   'mcalleridname' => 'MCallerIDName',
                   'mcalleridnamecharset' => 'MCallerIDNameCharSet',
                   'mcalleridnamepres' => 'MCallerIDNamePres',
                   'mcalleridsubaddr' => 'MCallerIDSubaddr',
                   'mcalleridsubaddrtype' => 'MCallerIDSubaddrType',
                   'mcalleridsubaddrodd' => 'MCallerIDSubaddrOdd',
                   'mcalleridpres' => 'MCallerIDPres',
                   'mconnectedidnumvalid' => 'MConnectedIDNumValid',
                   'mconnectedidnum' => 'MConnectedIDNum',
                   'mconnectedidton' => 'MConnectedIDton',
                   'mconnectedidnumplan' => 'MConnectedIDNumPlan',
                   'mconnectedidnumpres' => 'MConnectedIDNumPres',
                   'mconnectedidnamevalid' => 'MConnectedIDNameValid',
                   'mconnectedidname' => 'MConnectedIDName',
                   'mconnectedidnamecharset' => 'MConnectedIDNameCharSet',
                   'mconnectedidnamepres' => 'MConnectedIDNamePres',
                   'mconnectedidsubaddr' => 'MConnectedIDSubaddr',
                   'mconnectedidsubaddrtype' => 'MConnectedIDSubaddrType',
                   'mconnectedidsubaddrodd' => 'MConnectedIDSubaddrOdd',
                   'mconnectedidpres' => 'MConnectedIDPres',
               ),
               'AlarmClear' => array (
                   'dahdichannel' => 'DAHDIChannel',
               ),
               'SpanAlarmClear' => array (
                   'span' => 'Span',
               ),
               'Alarm' => array (
                   'dahdichannel' => 'DAHDIChannel',
                   'alarm' => 'Alarm',
               ),
               'SpanAlarm' => array (
                   'span' => 'Span',
                   'alarm' => 'Alarm',
               ),
               'SIPQualifyPeerDone' => array (
                   'peer' => 'Peer',
               ),
               'SessionTimeout' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'source' => 'Source',
               ),
               'MiniVoiceMail' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'action' => 'Action',
                   'mailbox' => 'Mailbox',
                   'counter' => 'Counter',
               ),
               'ConfbridgeRecord' => array (
                   'conference' => 'Conference',
                   'bridgeuniqueid' => 'BridgeUniqueid',
                   'bridgetype' => 'BridgeType',
                   'bridgetechnology' => 'BridgeTechnology',
                   'bridgecreator' => 'BridgeCreator',
                   'bridgename' => 'BridgeName',
                   'bridgenumchannels' => 'BridgeNumChannels',
                   'bridgevideosourcemode' => 'BridgeVideoSourceMode',
                   'bridgevideosource' => 'BridgeVideoSource',
               ),
               'ConfbridgeStopRecord' => array (
                   'conference' => 'Conference',
                   'bridgeuniqueid' => 'BridgeUniqueid',
                   'bridgetype' => 'BridgeType',
                   'bridgetechnology' => 'BridgeTechnology',
                   'bridgecreator' => 'BridgeCreator',
                   'bridgename' => 'BridgeName',
                   'bridgenumchannels' => 'BridgeNumChannels',
                   'bridgevideosourcemode' => 'BridgeVideoSourceMode',
                   'bridgevideosource' => 'BridgeVideoSource',
               ),
               'MeetmeJoin' => array (
                   'meetme' => 'Meetme',
                   'user' => 'User',
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'MeetmeLeave' => array (
                   'meetme' => 'Meetme',
                   'user' => 'User',
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'duration' => 'Duration',
               ),
               'MeetmeEnd' => array (
                   'meetme' => 'Meetme',
               ),
               'MeetmeTalkRequest' => array (
                   'meetme' => 'Meetme',
                   'user' => 'User',
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'duration' => 'Duration',
                   'status' => 'Status',
               ),
               'MeetmeTalking' => array (
                   'meetme' => 'Meetme',
                   'user' => 'User',
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'duration' => 'Duration',
                   'status' => 'Status',
               ),
               'MeetmeMute' => array (
                   'meetme' => 'Meetme',
                   'user' => 'User',
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'duration' => 'Duration',
                   'status' => 'Status',
               ),
               'QueueMemberPause' => array (
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
                   'stateinterface' => 'StateInterface',
                   'membership' => 'Membership',
                   'penalty' => 'Penalty',
                   'callstaken' => 'CallsTaken',
                   'lastcall' => 'LastCall',
                   'lastpause' => 'LastPause',
                   'incall' => 'InCall',
                   'status' => 'Status',
                   'paused' => 'Paused',
                   'pausedreason' => 'PausedReason',
                   'ringinuse' => 'Ringinuse',
                   'wrapuptime' => 'Wrapuptime',
                   'reason' => 'Reason',
               ),
               'QueueMemberPenalty' => array (
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
                   'stateinterface' => 'StateInterface',
                   'membership' => 'Membership',
                   'penalty' => 'Penalty',
                   'callstaken' => 'CallsTaken',
                   'lastcall' => 'LastCall',
                   'lastpause' => 'LastPause',
                   'incall' => 'InCall',
                   'status' => 'Status',
                   'paused' => 'Paused',
                   'pausedreason' => 'PausedReason',
                   'ringinuse' => 'Ringinuse',
                   'wrapuptime' => 'Wrapuptime',
               ),
               'QueueMemberRinginuse' => array (
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
                   'stateinterface' => 'StateInterface',
                   'membership' => 'Membership',
                   'penalty' => 'Penalty',
                   'callstaken' => 'CallsTaken',
                   'lastcall' => 'LastCall',
                   'lastpause' => 'LastPause',
                   'incall' => 'InCall',
                   'status' => 'Status',
                   'paused' => 'Paused',
                   'pausedreason' => 'PausedReason',
                   'ringinuse' => 'Ringinuse',
                   'wrapuptime' => 'Wrapuptime',
               ),
               'AgentCalled' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'destchannel' => 'DestChannel',
                   'destchannelstate' => 'DestChannelState',
                   'destchannelstatedesc' => 'DestChannelStateDesc',
                   'destcalleridnum' => 'DestCallerIDNum',
                   'destcalleridname' => 'DestCallerIDName',
                   'destconnectedlinenum' => 'DestConnectedLineNum',
                   'destconnectedlinename' => 'DestConnectedLineName',
                   'destlanguage' => 'DestLanguage',
                   'destaccountcode' => 'DestAccountCode',
                   'destcontext' => 'DestContext',
                   'destexten' => 'DestExten',
                   'destpriority' => 'DestPriority',
                   'destuniqueid' => 'DestUniqueid',
                   'destlinkedid' => 'DestLinkedid',
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
               ),
               'AgentRingNoAnswer' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'destchannel' => 'DestChannel',
                   'destchannelstate' => 'DestChannelState',
                   'destchannelstatedesc' => 'DestChannelStateDesc',
                   'destcalleridnum' => 'DestCallerIDNum',
                   'destcalleridname' => 'DestCallerIDName',
                   'destconnectedlinenum' => 'DestConnectedLineNum',
                   'destconnectedlinename' => 'DestConnectedLineName',
                   'destlanguage' => 'DestLanguage',
                   'destaccountcode' => 'DestAccountCode',
                   'destcontext' => 'DestContext',
                   'destexten' => 'DestExten',
                   'destpriority' => 'DestPriority',
                   'destuniqueid' => 'DestUniqueid',
                   'destlinkedid' => 'DestLinkedid',
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
                   'ringtime' => 'RingTime',
               ),
               'AgentComplete' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'destchannel' => 'DestChannel',
                   'destchannelstate' => 'DestChannelState',
                   'destchannelstatedesc' => 'DestChannelStateDesc',
                   'destcalleridnum' => 'DestCallerIDNum',
                   'destcalleridname' => 'DestCallerIDName',
                   'destconnectedlinenum' => 'DestConnectedLineNum',
                   'destconnectedlinename' => 'DestConnectedLineName',
                   'destlanguage' => 'DestLanguage',
                   'destaccountcode' => 'DestAccountCode',
                   'destcontext' => 'DestContext',
                   'destexten' => 'DestExten',
                   'destpriority' => 'DestPriority',
                   'destuniqueid' => 'DestUniqueid',
                   'destlinkedid' => 'DestLinkedid',
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
                   'holdtime' => 'HoldTime',
                   'talktime' => 'TalkTime',
                   'reason' => 'Reason',
               ),
               'AgentDump' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'destchannel' => 'DestChannel',
                   'destchannelstate' => 'DestChannelState',
                   'destchannelstatedesc' => 'DestChannelStateDesc',
                   'destcalleridnum' => 'DestCallerIDNum',
                   'destcalleridname' => 'DestCallerIDName',
                   'destconnectedlinenum' => 'DestConnectedLineNum',
                   'destconnectedlinename' => 'DestConnectedLineName',
                   'destlanguage' => 'DestLanguage',
                   'destaccountcode' => 'DestAccountCode',
                   'destcontext' => 'DestContext',
                   'destexten' => 'DestExten',
                   'destpriority' => 'DestPriority',
                   'destuniqueid' => 'DestUniqueid',
                   'destlinkedid' => 'DestLinkedid',
                   'queue' => 'Queue',
                   'membername' => 'MemberName',
                   'interface' => 'Interface',
               ),
               'LocalBridge' => array (
                   'localonechannel' => 'LocalOneChannel',
                   'localonechannelstate' => 'LocalOneChannelState',
                   'localonechannelstatedesc' => 'LocalOneChannelStateDesc',
                   'localonecalleridnum' => 'LocalOneCallerIDNum',
                   'localonecalleridname' => 'LocalOneCallerIDName',
                   'localoneconnectedlinenum' => 'LocalOneConnectedLineNum',
                   'localoneconnectedlinename' => 'LocalOneConnectedLineName',
                   'localonelanguage' => 'LocalOneLanguage',
                   'localoneaccountcode' => 'LocalOneAccountCode',
                   'localonecontext' => 'LocalOneContext',
                   'localoneexten' => 'LocalOneExten',
                   'localonepriority' => 'LocalOnePriority',
                   'localoneuniqueid' => 'LocalOneUniqueid',
                   'localonelinkedid' => 'LocalOneLinkedid',
                   'localtwochannel' => 'LocalTwoChannel',
                   'localtwochannelstate' => 'LocalTwoChannelState',
                   'localtwochannelstatedesc' => 'LocalTwoChannelStateDesc',
                   'localtwocalleridnum' => 'LocalTwoCallerIDNum',
                   'localtwocalleridname' => 'LocalTwoCallerIDName',
                   'localtwoconnectedlinenum' => 'LocalTwoConnectedLineNum',
                   'localtwoconnectedlinename' => 'LocalTwoConnectedLineName',
                   'localtwolanguage' => 'LocalTwoLanguage',
                   'localtwoaccountcode' => 'LocalTwoAccountCode',
                   'localtwocontext' => 'LocalTwoContext',
                   'localtwoexten' => 'LocalTwoExten',
                   'localtwopriority' => 'LocalTwoPriority',
                   'localtwouniqueid' => 'LocalTwoUniqueid',
                   'localtwolinkedid' => 'LocalTwoLinkedid',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'localoptimization' => 'LocalOptimization',
               ),
               'LocalOptimizationBegin' => array (
                   'localonechannel' => 'LocalOneChannel',
                   'localonechannelstate' => 'LocalOneChannelState',
                   'localonechannelstatedesc' => 'LocalOneChannelStateDesc',
                   'localonecalleridnum' => 'LocalOneCallerIDNum',
                   'localonecalleridname' => 'LocalOneCallerIDName',
                   'localoneconnectedlinenum' => 'LocalOneConnectedLineNum',
                   'localoneconnectedlinename' => 'LocalOneConnectedLineName',
                   'localonelanguage' => 'LocalOneLanguage',
                   'localoneaccountcode' => 'LocalOneAccountCode',
                   'localonecontext' => 'LocalOneContext',
                   'localoneexten' => 'LocalOneExten',
                   'localonepriority' => 'LocalOnePriority',
                   'localoneuniqueid' => 'LocalOneUniqueid',
                   'localonelinkedid' => 'LocalOneLinkedid',
                   'localtwochannel' => 'LocalTwoChannel',
                   'localtwochannelstate' => 'LocalTwoChannelState',
                   'localtwochannelstatedesc' => 'LocalTwoChannelStateDesc',
                   'localtwocalleridnum' => 'LocalTwoCallerIDNum',
                   'localtwocalleridname' => 'LocalTwoCallerIDName',
                   'localtwoconnectedlinenum' => 'LocalTwoConnectedLineNum',
                   'localtwoconnectedlinename' => 'LocalTwoConnectedLineName',
                   'localtwolanguage' => 'LocalTwoLanguage',
                   'localtwoaccountcode' => 'LocalTwoAccountCode',
                   'localtwocontext' => 'LocalTwoContext',
                   'localtwoexten' => 'LocalTwoExten',
                   'localtwopriority' => 'LocalTwoPriority',
                   'localtwouniqueid' => 'LocalTwoUniqueid',
                   'localtwolinkedid' => 'LocalTwoLinkedid',
                   'sourcechannel' => 'SourceChannel',
                   'sourcechannelstate' => 'SourceChannelState',
                   'sourcechannelstatedesc' => 'SourceChannelStateDesc',
                   'sourcecalleridnum' => 'SourceCallerIDNum',
                   'sourcecalleridname' => 'SourceCallerIDName',
                   'sourceconnectedlinenum' => 'SourceConnectedLineNum',
                   'sourceconnectedlinename' => 'SourceConnectedLineName',
                   'sourcelanguage' => 'SourceLanguage',
                   'sourceaccountcode' => 'SourceAccountCode',
                   'sourcecontext' => 'SourceContext',
                   'sourceexten' => 'SourceExten',
                   'sourcepriority' => 'SourcePriority',
                   'sourceuniqueid' => 'SourceUniqueid',
                   'sourcelinkedid' => 'SourceLinkedid',
                   'destuniqueid' => 'DestUniqueId',
                   'id' => 'Id',
               ),
               'LocalOptimizationEnd' => array (
                   'localonechannel' => 'LocalOneChannel',
                   'localonechannelstate' => 'LocalOneChannelState',
                   'localonechannelstatedesc' => 'LocalOneChannelStateDesc',
                   'localonecalleridnum' => 'LocalOneCallerIDNum',
                   'localonecalleridname' => 'LocalOneCallerIDName',
                   'localoneconnectedlinenum' => 'LocalOneConnectedLineNum',
                   'localoneconnectedlinename' => 'LocalOneConnectedLineName',
                   'localonelanguage' => 'LocalOneLanguage',
                   'localoneaccountcode' => 'LocalOneAccountCode',
                   'localonecontext' => 'LocalOneContext',
                   'localoneexten' => 'LocalOneExten',
                   'localonepriority' => 'LocalOnePriority',
                   'localoneuniqueid' => 'LocalOneUniqueid',
                   'localonelinkedid' => 'LocalOneLinkedid',
                   'localtwochannel' => 'LocalTwoChannel',
                   'localtwochannelstate' => 'LocalTwoChannelState',
                   'localtwochannelstatedesc' => 'LocalTwoChannelStateDesc',
                   'localtwocalleridnum' => 'LocalTwoCallerIDNum',
                   'localtwocalleridname' => 'LocalTwoCallerIDName',
                   'localtwoconnectedlinenum' => 'LocalTwoConnectedLineNum',
                   'localtwoconnectedlinename' => 'LocalTwoConnectedLineName',
                   'localtwolanguage' => 'LocalTwoLanguage',
                   'localtwoaccountcode' => 'LocalTwoAccountCode',
                   'localtwocontext' => 'LocalTwoContext',
                   'localtwoexten' => 'LocalTwoExten',
                   'localtwopriority' => 'LocalTwoPriority',
                   'localtwouniqueid' => 'LocalTwoUniqueid',
                   'localtwolinkedid' => 'LocalTwoLinkedid',
                   'success' => 'Success',
                   'id' => 'Id',
               ),
               'Load' => array (
                   'module' => 'Module',
                   'status' => 'Status',
               ),
               'Unload' => array (
                   'module' => 'Module',
                   'status' => 'Status',
               ),
               'BridgeVideoSourceUpdate' => array (
                   'bridgeuniqueid' => 'BridgeUniqueid',
                   'bridgetype' => 'BridgeType',
                   'bridgetechnology' => 'BridgeTechnology',
                   'bridgecreator' => 'BridgeCreator',
                   'bridgename' => 'BridgeName',
                   'bridgenumchannels' => 'BridgeNumChannels',
                   'bridgevideosourcemode' => 'BridgeVideoSourceMode',
                   'bridgevideosource' => 'BridgeVideoSource',
                   'bridgepreviousvideosource' => 'BridgePreviousVideoSource',
               ),
               'Pickup' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'targetchannel' => 'TargetChannel',
                   'targetchannelstate' => 'TargetChannelState',
                   'targetchannelstatedesc' => 'TargetChannelStateDesc',
                   'targetcalleridnum' => 'TargetCallerIDNum',
                   'targetcalleridname' => 'TargetCallerIDName',
                   'targetconnectedlinenum' => 'TargetConnectedLineNum',
                   'targetconnectedlinename' => 'TargetConnectedLineName',
                   'targetlanguage' => 'TargetLanguage',
                   'targetaccountcode' => 'TargetAccountCode',
                   'targetcontext' => 'TargetContext',
                   'targetexten' => 'TargetExten',
                   'targetpriority' => 'TargetPriority',
                   'targetuniqueid' => 'TargetUniqueid',
                   'targetlinkedid' => 'TargetLinkedid',
               ),
               'Shutdown' => array (
                   'shutdown' => 'Shutdown',
                   'restart' => 'Restart',
               ),
               'DeviceStateChange' => array (
                   'device' => 'Device',
                   'state' => 'State',
               ),
               'HangupRequest' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'cause' => 'Cause',
               ),
               'SoftHangupRequest' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'cause' => 'Cause',
               ),
               'NewConnectedLine' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'DialState' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'destchannel' => 'DestChannel',
                   'destchannelstate' => 'DestChannelState',
                   'destchannelstatedesc' => 'DestChannelStateDesc',
                   'destcalleridnum' => 'DestCallerIDNum',
                   'destcalleridname' => 'DestCallerIDName',
                   'destconnectedlinenum' => 'DestConnectedLineNum',
                   'destconnectedlinename' => 'DestConnectedLineName',
                   'destlanguage' => 'DestLanguage',
                   'destaccountcode' => 'DestAccountCode',
                   'destcontext' => 'DestContext',
                   'destexten' => 'DestExten',
                   'destpriority' => 'DestPriority',
                   'destuniqueid' => 'DestUniqueid',
                   'destlinkedid' => 'DestLinkedid',
                   'dialstatus' => 'DialStatus',
                   'forward' => 'Forward',
               ),
               'Unhold' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'ChanSpyStart' => array (
                   'spyerchannel' => 'SpyerChannel',
                   'spyerchannelstate' => 'SpyerChannelState',
                   'spyerchannelstatedesc' => 'SpyerChannelStateDesc',
                   'spyercalleridnum' => 'SpyerCallerIDNum',
                   'spyercalleridname' => 'SpyerCallerIDName',
                   'spyerconnectedlinenum' => 'SpyerConnectedLineNum',
                   'spyerconnectedlinename' => 'SpyerConnectedLineName',
                   'spyerlanguage' => 'SpyerLanguage',
                   'spyeraccountcode' => 'SpyerAccountCode',
                   'spyercontext' => 'SpyerContext',
                   'spyerexten' => 'SpyerExten',
                   'spyerpriority' => 'SpyerPriority',
                   'spyeruniqueid' => 'SpyerUniqueid',
                   'spyerlinkedid' => 'SpyerLinkedid',
                   'spyeechannel' => 'SpyeeChannel',
                   'spyeechannelstate' => 'SpyeeChannelState',
                   'spyeechannelstatedesc' => 'SpyeeChannelStateDesc',
                   'spyeecalleridnum' => 'SpyeeCallerIDNum',
                   'spyeecalleridname' => 'SpyeeCallerIDName',
                   'spyeeconnectedlinenum' => 'SpyeeConnectedLineNum',
                   'spyeeconnectedlinename' => 'SpyeeConnectedLineName',
                   'spyeelanguage' => 'SpyeeLanguage',
                   'spyeeaccountcode' => 'SpyeeAccountCode',
                   'spyeecontext' => 'SpyeeContext',
                   'spyeeexten' => 'SpyeeExten',
                   'spyeepriority' => 'SpyeePriority',
                   'spyeeuniqueid' => 'SpyeeUniqueid',
                   'spyeelinkedid' => 'SpyeeLinkedid',
               ),
               'ChanSpyStop' => array (
                   'spyerchannel' => 'SpyerChannel',
                   'spyerchannelstate' => 'SpyerChannelState',
                   'spyerchannelstatedesc' => 'SpyerChannelStateDesc',
                   'spyercalleridnum' => 'SpyerCallerIDNum',
                   'spyercalleridname' => 'SpyerCallerIDName',
                   'spyerconnectedlinenum' => 'SpyerConnectedLineNum',
                   'spyerconnectedlinename' => 'SpyerConnectedLineName',
                   'spyerlanguage' => 'SpyerLanguage',
                   'spyeraccountcode' => 'SpyerAccountCode',
                   'spyercontext' => 'SpyerContext',
                   'spyerexten' => 'SpyerExten',
                   'spyerpriority' => 'SpyerPriority',
                   'spyeruniqueid' => 'SpyerUniqueid',
                   'spyerlinkedid' => 'SpyerLinkedid',
                   'spyeechannel' => 'SpyeeChannel',
                   'spyeechannelstate' => 'SpyeeChannelState',
                   'spyeechannelstatedesc' => 'SpyeeChannelStateDesc',
                   'spyeecalleridnum' => 'SpyeeCallerIDNum',
                   'spyeecalleridname' => 'SpyeeCallerIDName',
                   'spyeeconnectedlinenum' => 'SpyeeConnectedLineNum',
                   'spyeeconnectedlinename' => 'SpyeeConnectedLineName',
                   'spyeelanguage' => 'SpyeeLanguage',
                   'spyeeaccountcode' => 'SpyeeAccountCode',
                   'spyeecontext' => 'SpyeeContext',
                   'spyeeexten' => 'SpyeeExten',
                   'spyeepriority' => 'SpyeePriority',
                   'spyeeuniqueid' => 'SpyeeUniqueid',
                   'spyeelinkedid' => 'SpyeeLinkedid',
               ),
               'HangupHandlerRun' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'handler' => 'Handler',
               ),
               'HangupHandlerPop' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'handler' => 'Handler',
               ),
               'HangupHandlerPush' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'handler' => 'Handler',
               ),
               'FAXStatus' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'operation' => 'Operation',
                   'status' => 'Status',
                   'localstationid' => 'LocalStationID',
                   'filename' => 'FileName',
               ),
               'ReceiveFAX' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'localstationid' => 'LocalStationID',
                   'remotestationid' => 'RemoteStationID',
                   'pagestransferred' => 'PagesTransferred',
                   'resolution' => 'Resolution',
                   'transferrate' => 'TransferRate',
                   'filename' => 'FileName',
               ),
               'SendFAX' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'localstationid' => 'LocalStationID',
                   'remotestationid' => 'RemoteStationID',
                   'pagestransferred' => 'PagesTransferred',
                   'resolution' => 'Resolution',
                   'transferrate' => 'TransferRate',
                   'filename' => 'FileName',
               ),
               'MonitorStart' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'MonitorStop' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'ExtensionStateListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'PresenceStateChange' => array (
                   'presentity' => 'Presentity',
                   'status' => 'Status',
                   'subtype' => 'Subtype',
                   'message' => 'Message',
               ),
               'FailedACL' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'aclname' => 'ACLName',
                   'sessiontv' => 'SessionTV',
               ),
               'InvalidAccountID' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'SessionLimit' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'MemoryLimit' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'LoadAverageLimit' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'RequestNotSupported' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'requesttype' => 'RequestType',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'RequestNotAllowed' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'requesttype' => 'RequestType',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
                   'requestparams' => 'RequestParams',
               ),
               'AuthMethodNotAllowed' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'authmethod' => 'AuthMethod',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'UnexpectedAddress' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'expectedaddress' => 'ExpectedAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'ChallengeResponseFailed' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'challenge' => 'Challenge',
                   'response' => 'Response',
                   'expectedresponse' => 'ExpectedResponse',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'InvalidPassword' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
                   'challenge' => 'Challenge',
                   'receivedchallenge' => 'ReceivedChallenge',
                   'receivedhash' => 'ReceivedHash',
               ),
               'ChallengeSent' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'challenge' => 'Challenge',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'InvalidTransport' => array (
                   'eventtv' => 'EventTV',
                   'severity' => 'Severity',
                   'service' => 'Service',
                   'eventversion' => 'EventVersion',
                   'accountid' => 'AccountID',
                   'sessionid' => 'SessionID',
                   'localaddress' => 'LocalAddress',
                   'remoteaddress' => 'RemoteAddress',
                   'attemptedtransport' => 'AttemptedTransport',
                   'module' => 'Module',
                   'sessiontv' => 'SessionTV',
               ),
               'ChannelTalkingStart' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
               ),
               'ChannelTalkingStop' => array (
                   'channel' => 'Channel',
                   'channelstate' => 'ChannelState',
                   'channelstatedesc' => 'ChannelStateDesc',
                   'calleridnum' => 'CallerIDNum',
                   'calleridname' => 'CallerIDName',
                   'connectedlinenum' => 'ConnectedLineNum',
                   'connectedlinename' => 'ConnectedLineName',
                   'language' => 'Language',
                   'accountcode' => 'AccountCode',
                   'context' => 'Context',
                   'exten' => 'Exten',
                   'priority' => 'Priority',
                   'uniqueid' => 'Uniqueid',
                   'linkedid' => 'Linkedid',
                   'duration' => 'Duration',
               ),
               'ContactStatus' => array (
                   'uri' => 'URI',
                   'contactstatus' => 'ContactStatus',
                   'aor' => 'AOR',
                   'endpointname' => 'EndpointName',
                   'roundtripusec' => 'RoundtripUsec',
               ),
               'PresenceStatus' => array (
                   'exten' => 'Exten',
                   'context' => 'Context',
                   'hint' => 'Hint',
                   'status' => 'Status',
                   'subtype' => 'Subtype',
                   'message' => 'Message',
               ),
               'ParkedCallSwap' => array (
                   'parkeechannel' => 'ParkeeChannel',
                   'parkeechannelstate' => 'ParkeeChannelState',
                   'parkeechannelstatedesc' => 'ParkeeChannelStateDesc',
                   'parkeecalleridnum' => 'ParkeeCallerIDNum',
                   'parkeecalleridname' => 'ParkeeCallerIDName',
                   'parkeeconnectedlinenum' => 'ParkeeConnectedLineNum',
                   'parkeeconnectedlinename' => 'ParkeeConnectedLineName',
                   'parkeelanguage' => 'ParkeeLanguage',
                   'parkeeaccountcode' => 'ParkeeAccountCode',
                   'parkeecontext' => 'ParkeeContext',
                   'parkeeexten' => 'ParkeeExten',
                   'parkeepriority' => 'ParkeePriority',
                   'parkeeuniqueid' => 'ParkeeUniqueid',
                   'parkeelinkedid' => 'ParkeeLinkedid',
                   'parkerchannel' => 'ParkerChannel',
                   'parkerchannelstate' => 'ParkerChannelState',
                   'parkerchannelstatedesc' => 'ParkerChannelStateDesc',
                   'parkercalleridnum' => 'ParkerCallerIDNum',
                   'parkercalleridname' => 'ParkerCallerIDName',
                   'parkerconnectedlinenum' => 'ParkerConnectedLineNum',
                   'parkerconnectedlinename' => 'ParkerConnectedLineName',
                   'parkerlanguage' => 'ParkerLanguage',
                   'parkeraccountcode' => 'ParkerAccountCode',
                   'parkercontext' => 'ParkerContext',
                   'parkerexten' => 'ParkerExten',
                   'parkerpriority' => 'ParkerPriority',
                   'parkeruniqueid' => 'ParkerUniqueid',
                   'parkerlinkedid' => 'ParkerLinkedid',
                   'parkerdialstring' => 'ParkerDialString',
                   'parkinglot' => 'Parkinglot',
                   'parkingspace' => 'ParkingSpace',
                   'parkingtimeout' => 'ParkingTimeout',
                   'parkingduration' => 'ParkingDuration',
               ),
               'DeviceStateChange' => array (
                   'device' => 'Device',
                   'state' => 'State',
               ),
               'DeviceStateListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'PresenceStateChange' => array (
                   'presentity' => 'Presentity',
                   'status' => 'Status',
                   'subtype' => 'Subtype',
                   'message' => 'Message',
               ),
               'PresenceStateListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'MWIGet' => array (
                   'mailbox' => 'Mailbox',
                   'oldmessages' => 'OldMessages',
                   'newmessages' => 'NewMessages',
               ),
               'MWIGetComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'FAXSessionsEntry' => array (
                   'channel' => 'Channel',
                   'technology' => 'Technology',
                   'sessionnumber' => 'SessionNumber',
                   'sessiontype' => 'SessionType',
                   'operation' => 'Operation',
                   'state' => 'State',
                   'files' => 'Files',
               ),
               'FAXSessionsComplete' => array (
                   'total' => 'Total',
               ),
               'FAXSession' => array (
                   'sessionnumber' => 'SessionNumber',
                   'operation' => 'Operation',
                   'state' => 'State',
                   'errorcorrectionmode' => 'ErrorCorrectionMode',
                   'datarate' => 'DataRate',
                   'imageresolution' => 'ImageResolution',
                   'pagenumber' => 'PageNumber',
                   'filename' => 'FileName',
                   'pagestransmitted' => 'PagesTransmitted',
                   'pagesreceived' => 'PagesReceived',
                   'totalbadlines' => 'TotalBadLines',
               ),
               'FAXStats' => array (
                   'currentsessions' => 'CurrentSessions',
                   'reservedsessions' => 'ReservedSessions',
                   'transmitattempts' => 'TransmitAttempts',
                   'receiveattempts' => 'ReceiveAttempts',
                   'completedfaxes' => 'CompletedFAXes',
                   'failedfaxes' => 'FailedFAXes',
               ),
               'IdentifyDetail' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'endpoint' => 'Endpoint',
                   'srvlookups' => 'SrvLookups',
                   'match' => 'Match',
                   'matchheader' => 'MatchHeader',
                   'endpointname' => 'EndpointName',
               ),
               'AorList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'minimumexpiration' => 'MinimumExpiration',
                   'maximumexpiration' => 'MaximumExpiration',
                   'defaultexpiration' => 'DefaultExpiration',
                   'qualifyfrequency' => 'QualifyFrequency',
                   'authenticatequalify' => 'AuthenticateQualify',
                   'maxcontacts' => 'MaxContacts',
                   'removeexisting' => 'RemoveExisting',
                   'mailboxes' => 'Mailboxes',
                   'outboundproxy' => 'OutboundProxy',
                   'supportpath' => 'SupportPath',
               ),
               'AuthList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'username' => 'Username',
                   'md5cred' => 'Md5Cred',
                   'realm' => 'Realm',
                   'authtype' => 'AuthType',
                   'password' => 'Password',
                   'noncelifetime' => 'NonceLifetime',
               ),
               'ContactList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'viaaddr' => 'ViaAddr',
                   'viaport' => 'ViaPort',
                   'qualifytimeout' => 'QualifyTimeout',
                   'callid' => 'CallId',
                   'regserver' => 'RegServer',
                   'pruneonboot' => 'PruneOnBoot',
                   'path' => 'Path',
                   'endpoint' => 'Endpoint',
                   'authenticatequalify' => 'AuthenticateQualify',
                   'uri' => 'Uri',
                   'qualifyfrequency' => 'QualifyFrequency',
                   'useragent' => 'UserAgent',
                   'expirationtime' => 'ExpirationTime',
                   'outboundproxy' => 'OutboundProxy',
                   'status' => 'Status',
                   'roundtripusec' => 'RoundtripUsec',
               ),
               'IdentifyDetail' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'endpoint' => 'Endpoint',
                   'srvlookups' => 'SrvLookups',
                   'match' => 'Match',
                   'matchheader' => 'MatchHeader',
                   'endpointname' => 'EndpointName',
               ),
               'EndpointDetailComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'AorList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'minimumexpiration' => 'MinimumExpiration',
                   'maximumexpiration' => 'MaximumExpiration',
                   'defaultexpiration' => 'DefaultExpiration',
                   'qualifyfrequency' => 'QualifyFrequency',
                   'authenticatequalify' => 'AuthenticateQualify',
                   'maxcontacts' => 'MaxContacts',
                   'removeexisting' => 'RemoveExisting',
                   'mailboxes' => 'Mailboxes',
                   'outboundproxy' => 'OutboundProxy',
                   'supportpath' => 'SupportPath',
               ),
               'AorListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'AuthList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'username' => 'Username',
                   'md5cred' => 'Md5Cred',
                   'realm' => 'Realm',
                   'authtype' => 'AuthType',
                   'password' => 'Password',
                   'noncelifetime' => 'NonceLifetime',
               ),
               'AuthListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
               'ContactList' => array (
                   'objecttype' => 'ObjectType',
                   'objectname' => 'ObjectName',
                   'viaaddr' => 'ViaAddr',
                   'viaport' => 'ViaPort',
                   'qualifytimeout' => 'QualifyTimeout',
                   'callid' => 'CallId',
                   'regserver' => 'RegServer',
                   'pruneonboot' => 'PruneOnBoot',
                   'path' => 'Path',
                   'endpoint' => 'Endpoint',
                   'authenticatequalify' => 'AuthenticateQualify',
                   'uri' => 'Uri',
                   'qualifyfrequency' => 'QualifyFrequency',
                   'useragent' => 'UserAgent',
                   'expirationtime' => 'ExpirationTime',
                   'outboundproxy' => 'OutboundProxy',
                   'status' => 'Status',
                   'roundtripusec' => 'RoundtripUsec',
               ),
               'ContactListComplete' => array (
                   'eventlist' => 'EventList',
                   'listitems' => 'ListItems',
               ),
            );
            $eventGetters = array(

            );
            foreach ($eventNames as $eventName) {
                $this->_testEvent($eventName, $eventGetters, $eventValues[$eventName], $eventTranslatedValues);
            }
        }
    }
}
